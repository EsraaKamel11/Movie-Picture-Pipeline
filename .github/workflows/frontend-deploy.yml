name: Frontend Deployment

on:
  push:
    branches: [main]
    paths:
      - 'frontend/**'
  workflow_dispatch:

jobs:
  deploy:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Configure AWS Credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ secrets.AWS_REGION }}

      - name: Update kubeconfig for EKS
        run: |
          aws eks update-kubeconfig --region ${{ secrets.AWS_REGION }} --name ${{ secrets.CLUSTER_NAME }}

      - name: Add github-action-user to aws-auth ConfigMap
        run: |
          # Fetch the current aws-auth configmap and save it to a temporary file
          kubectl get configmap aws-auth -n kube-system -o yaml > aws-auth.yaml
          
          # Add the github-action-user to the configmap
          echo "
          - rolearn: ${{ secrets.KUBERNETES_ROLE_ARN }}
            username: github-action-user
            groups:
            - system:masters
          " >> aws-auth.yaml

          # Apply the updated configmap back to the cluster
          kubectl apply -f aws-auth.yaml

      - name: Log in to Amazon ECR
        uses: aws-actions/amazon-ecr-login@v1

      - name: Build, tag, and push Docker image
        run: |
          docker build -t ${{ secrets.ECR_REPOSITORY_FRONTEND }}:latest frontend
          docker tag ${{ secrets.ECR_REPOSITORY_FRONTEND }}:latest ${{ secrets.ECR_REPOSITORY_FRONTEND }}:${{ github.sha }}
          docker push ${{ secrets.ECR_REPOSITORY_FRONTEND }}:${{ github.sha }}

      - name: Deploy to EKS
        run: |
          cd frontend/k8s
          kustomize edit set image frontend=${{ secrets.ECR_REPOSITORY_FRONTEND }}:${{ github.sha }}
          kustomize build | kubectl apply -f -
